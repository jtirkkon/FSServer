{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","console","log","post","id","put","delete","Filter","handleFilterChange","type","onChange","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","Person","person","deletePerson","name","number","onClick","Persons","persons","filtered","filter","show","map","key","Notification","message","messageType","style","color","fontSize","background","borderWidht","borderRadius","borderColor","borderStyle","width","marginBottom","marginTop","App","useState","setPersons","setNewName","setNewNumber","informationMessage","setInformationMessage","setMessageType","useEffect","personService","then","response","data","event","newArray","forEach","element","toLowerCase","includes","target","toString","preventDefault","result","window","confirm","find","p","changedPerson","catch","error","setTimeout","personObject","concat","deleteId","deleteName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8792fbc3.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl =  'https://evening-savannah-71492.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\n//Ennen herokua local: const baseUrl = 'http://localhost:3001/api/persons'\r\n//Heroku: https://evening-savannah-71492.herokuapp.com/\r\n//alkuperäinen baseUrhl 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  console.log(\"in create\")\r\n  return axios.post(baseUrl, newObject)\r\n  \r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  //console.log(\"in deletePerson persons.js\", id)\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\nimport './App.css'\n\n//muuten kai toimii, mutta tiedot eivät päivity, esim alussa tai deletoinnin jälkeen\n//tutkitaan tätä, myös pavelimen konsolia\n//lisäys ei päivitä tietoja heti!!!\n//Github test\n\n//Tehtävät 2.6, 2.7 ja 2.8, 2.10 Nyt toimii!!!\n//2.15, 2.16, 2.17 ja 2.18 Toimii!!!\n//2.19 ja 2.20 Toimii!!!\n//Tässä on todella paljon tärkeää oppia, taulukoiden käsittelyä, State-objekti taulukon käsittelyä!!!\n//Tehdään maiden tiedot myöhemmin\nconst Filter = ({handleFilterChange}) => {\n  return (\n    <div>\n      <label>filter shown with </label>\n      <input type=\"text\" onChange={handleFilterChange}/>\n    </div>\n  )  \n}\n\n//pitäisikö id-numero lisätä?\nconst PersonForm = ({addPerson, handleNameChange, handleNumberChange, newName, newNumber}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n//Render single person\nconst Person = ({person, deletePerson}) => {\n  return (\n    <p>{person.name} {person.number} <button onClick={() => deletePerson(person.id, person.name)}>delete</button></p>\n  )\n}\n\n//Component filtered persons, which show is true and renders these persons\nconst Persons = ({persons, deletePerson}) => {\n  const filtered = persons.filter(person => person.show === true)\n  //console.log(\"filtered\", filtered)  \n  return (\n    <div>\n      {filtered.map(person =>\n      <Person key={person.name} person={person} deletePerson={deletePerson} />\n      )}  \n    </div>\n  )\n}\n\n//Component for information of person adding\nconst Notification = ({message, messageType}) => {\n  const addingStyle = {\n    color: \"green\",\n    fontSize: 30,\n    background: \"lightgrey\",\n    borderWidht: 1,\n    borderRadius: 5,\n    borderColor: \"green\",\n    borderStyle: \"solid\",\n    width: 500,\n    marginBottom: 20,\n    marginTop: 10\n  }\n  const errorStyle = {\n    color: \"red\",\n    fontSize: 30,\n    background: \"lightgrey\",\n    borderWidht: 1,\n    borderRadius: 5,\n    borderColor: \"red\",\n    borderStyle: \"solid\",\n    width: 500,\n    marginBottom: 20,\n    marginTop: 10\n  }\n\n  if (message === null) {\n    return null\n  }\n  if (messageType === 'error') {\n    return (\n      <div style={errorStyle}>{message}</div>\n    )  \n  }\n\n  return (\n    <div style={addingStyle}>{message}</div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    /*{name: 'Arto Hellas', number: '040-3459067', show: true}, \n    {name: 'Jouni Tirkkonen', number: '050-3297068', show: true}, \n    {name: 'Sanna Siipola', number: '040-4568900', show: true}*/\n  ]) \n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [informationMessage, setInformationMessage] = useState(null)\n  const [messageType, setMessageType] = useState('')\n\n  useEffect(() => {\n    console.log('effect')    \n    personService\n    .getAll()      \n    .then(response => {        \n      console.log('promise fulfilled')        \n      setPersons(response.data)\n    })  \n  }, [])  \n  console.log(\"persons\", persons)     \n \n  const addPerson = (event) => {\n    console.log('newName', newName)\n    event.preventDefault()\n    const names = persons.map(element => element.name)\n    const findName = names.includes(newName);\n    \n    if (!findName) {\n      const personObject = {name: newName, number: newNumber, show: true}\n      console.log(\"personObject\", personObject);\n      personService\n      .create(personObject)\n      .then(response => {\n        console.log(response)\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        console.log(\"name added\", persons)\n      })\n      setInformationMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setInformationMessage(null)\n      }, 5000)\n      //setPersons(persons.concat(personObject))\n    } else {\n      const message = `${newName} is already added to phonebook, replace the old number with a new one`\n      const result = window.confirm(message)\n      const person = persons.find(p => p.name === newName)\n      const id = person.id\n      console.log(\"person\", person)\n     \n      //const url = `http://localhost:3001/persons/${id}`\n      const changedPerson = {...person, number: newNumber}\n      if (result) {\n        personService\n        .update(id, changedPerson)\n        .then(response => {\n          //console.log(\"number updated\")\n          setPersons(persons.map(person => person.id !== id ? person : response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setInformationMessage(`Information of ${newName} has already been removed from server`)\n          setMessageType('error')\n          setTimeout(() => {\n            setInformationMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n          setNewName('')\n          setNewNumber('')\n          //alert(`Name ${newName} was already deleted from server`)      \n        })\n      }\n      //window.alert(`${newName} is already added to phonebook`)\n    }\n  }\n\n  //Function deletes person\n  const deletePerson = (deleteId, deleteName) => {\n    //console.log(\"in delete person\", deleteId)\n    const message = `Delete ${deleteName}`\n    const result = window.confirm(message)\n    \n    if (result) {\n      personService\n        .deletePerson(deleteId)\n        .then(response => {\n          //Kutsutaan tiedot uudestaan serveriltä, vois ehkä tehdä jollain päivitykselläkin\n          personService\n          .getAll()      \n          .then(response => {        \n            //console.log('promise fulfilled')        \n            setPersons(response.data)\n          })  \n        })\n    }\n  }\n\n  //Handles name input field\n  const handleNameChange = (event) => {\n    //tulostaa konsoliin syötteen\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  //Handles number input field\n  const handleNumberChange = (event) => {\n    //console.log(\"handle number Change\")\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    const newArray = [...persons]\n    \n    newArray.forEach(element => element.show = false)\n     //For loopilla tehty vastaava\n    /*for (let i = 0; i < newArray.length; i++) {\n      newArray[i] = {...newArray[i], show: false}\n    }*/\n    \n    newArray.forEach(element => {\n      if (element.name.toLowerCase().includes(event.target.value.toString().toLowerCase())) {\n        element.show = true\n      }\n    })\n   \n    //Tässä for loopilla tehty vastaava\n    /*for (let i=0; i < newArray.length; i++) {\n      if (newArray[i].name.toLowerCase().includes(event.target.value.toString().toLowerCase())) {\n        newArray[i] = {...newArray[i], show: true}\n      }\n    }*/\n    setPersons(newArray)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handleFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <Notification message={informationMessage} messageType={messageType} />\n      <PersonForm addPerson={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} \n      newName={newName} newNumber={newNumber} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}